{"version":3,"sources":["./src/app/user-profile/user-profile.component.ts","./src/app/user-profile/user-profile.component.html","./src/app/movie-card/movie-card.component.ts","./src/app/movie-card/movie-card.component.html","./src/app/genre/genre.component.ts","./src/app/genre/genre.component.html","./src/environments/environment.ts","./src/app/user-registration-form/user-registration-form.component.ts","./src/app/user-registration-form/user-registration-form.component.html","./src/app/director/director.component.ts","./src/app/director/director.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/welcome-page/welcome-page.component.ts","./src/app/welcome-page/welcome-page.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/synopsis/synopsis.component.ts","./src/app/synopsis/synopsis.component.html","./src/app/user-login-form/user-login-form.component.ts","./src/app/user-login-form/user-login-form.component.html","./src/app/fetch-api-data.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { MovieAPIService } from '../fetch-api-data.service';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatCardModule } from '@angular/material/card';\n\n\n// Component Imports\nimport { DirectorComponent } from '../director/director.component';\nimport { GenreComponent } from '../genre/genre.component';\nimport { SynopsisComponent } from '../synopsis/synopsis.component';\nimport { MovieCardComponent } from '../movie-card/movie-card.component';\n\n/**\n * Component for user profile management.\n */\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n  /** Input for user data. */\n  @Input() userData: any = { Username: '', Password: '', Email: '', Birthday: '' };\n\n  /** Form data for user. */\n  formUserData: any = {\n    Username: '',\n    Password: '',\n    Email: '',\n    Birthday: '',\n    favoriteMovie: []\n  };\n\n  /** User object. */\n  user: any = {};\n\n  /** List of all movies. */\n  movies: any[] = [];\n\n  /** List of favorite movies. */\n  favoritemovie: any[] = [];\n\n  /** List of favorite movie IDs. */\n  favoriteMoviesIDs: any[] = [];\n\n  /**\n     * Constructs the UserProfileComponent.\n     * @param movieAPIDataiData - The service for fetching API data.\n     * @param dialog - The dialog service for displaying dialogs.\n     * @param snackBar - The snack bar service for displaying notifications.\n     * @param router - The router service for navigation.\n     */\n  constructor(\n    public movieAPIData: MovieAPIService,\n    public dialog: MatDialog,\n    public snackBar: MatSnackBar,\n    public movieCardComponent: MovieCardComponent,\n    public router: Router\n  ) { }\n/** Lifecycle hook called after component initialization. */  ngOnInit(): void {\n  this.userData.Username = JSON.parse(localStorage.getItem('user')).Username;\n  \n    this.getProfile();\n    this.getMovies(); // Call getMovies() on component initialization\n    this.getFavMovies(); // Call getFavMovies() on component initialization\n  }\n\n  /**\n     * Fetches user profile data.\n     */\n  public getProfile(): void {\n    this.movieAPIData.getUser(this.userData.Username).subscribe((result: any) => {\n      this.user = result;\n      this.userData.Username = this.user.Username;\n      this.userData.Email = this.user.Email;\n      if (this.user.Birthday) {\n        let Birthday = new Date(this.user.Birthday);\n        if (!isNaN(Birthday.getTime())) {\n\n          this.userData.Birthday = Birthday.toISOString().split('T')[0];\n          \n        }\n      }\n      this.formUserData = { ...this.userData };\n      this.favoriteMoviesIDs = this.user.favoritemovie;\n\n      this.movieAPIData.getAllMovies().subscribe((movies: any[]) => {\n        this.favoritemovie = movies.filter((movie: any) => this.favoriteMoviesIDs && this.favoriteMoviesIDs.includes(movie._id));\n      });\n    });\n  }\n\n  /**\n     * Fetches all movies.\n     */\n  getMovies(): void {\n    this.movieAPIData.getAllMovies().subscribe((result: any) => {\n      if (Array.isArray(result)) {\n        this.movies = result;\n      }\n      return this.movies;\n    });\n  }\n\n  /**\n     * Fetches user's favorite movies.\n     */\n  getFavMovies(): void {\n    this.movieAPIData.getUser(this.userData.Username).subscribe((result) => {\n      this.favoriteMoviesIDs = result.favoritemovie;\n    });\n  }\n\n  /**\n     * Checks if a movie is in the user's favorite movies list.\n     * @param movie - The movie to check.\n     * @returns True if the movie is a favorite, otherwise false.\n     */\n  isFav(movie: any): boolean {\n\n    return this.favoriteMoviesIDs.includes(movie._id);\n  }\n\n\n  /**\n     * Toggles a movie in the user's favorite movies list.\n     * @param movie - The movie to toggle.\n     */\n  \n\n  /**\n     * Adds a movie to the user's favorite movies list.\n     * @param movie - The movie to add.\n     */\n\n\n  /**\n     * Deletes a movie from the user's favorite movies list.\n     * @param movie - The movie to remove from favorites.\n     */\n\n\n  /**\n     * Updates user data.\n     */\n  editUser(): void {\n    this.movieAPIData.editUser(this.userData.Username, this.userData.Password, this.userData.Email, this.userData.Birthday).subscribe((result) => {\n      localStorage.setItem('user', JSON.stringify(result));\n      this.snackBar.open('Your infomation was updated successfully!', 'OK', {\n        duration: 2000,\n      });\n      this.getProfile();\n    }, (error) => {\n      console.log('Error updating user:', error);\n      this.snackBar.open('Failed to update your infomation', 'OK', {\n        duration: 2000,\n      });\n    });\n  }\n\n  /**\n     * Deletes the user's account.\n     */\n  async deleteUser(): Promise<void> {\n    if (confirm('Do you want to delete your account permanently?')) {\n      this.movieAPIData.deleteUser(this.user.Username).subscribe(() => {\n        this.snackBar.open('Account deleted successfully', 'OK', {\n          duration: 3000,\n        });\n        localStorage.clear();\n        this.router.navigate(['welcome']);\n      });\n    }\n  }\n}","<!doctype html>\n\n<div class=\"profile-page\">\n    <!-- User profile section -->\n    <h1>{{userData.Username}}'s Profile</h1>\n\n    <!-- User information display section -->\n    <div>\n\n        <!-- User information update form -->\n        <div>\n            <h2>Update your info</h2>\n            <form>\n                <!-- Input field for user's name -->\n                <mat-form-field>\n                    <mat-label>Name</mat-label>\n                    <input matInput [(ngModel)]=\"userData.Username\" type=\"text\" placeholder=\"Username\" name=\"Username\">\n                </mat-form-field>\n\n                <!-- Input field for user's password -->\n                <mat-form-field>\n                    <mat-label>Password</mat-label>\n                    <input matInput [(ngModel)]=\"userData.Password\" type=\"password\" placeholder=\"Password\"\n                        name=\"Password\">\n                </mat-form-field>\n\n                <!-- Input field for user's email -->\n                <mat-form-field>\n                    <mat-label>Email</mat-label>\n                    <input matInput [(ngModel)]=\"userData.Email\" type=\"email\" placeholder=\"Email\" name=\"Email\">\n                </mat-form-field>\n\n                <!-- Input field for user's birthday -->\n                <mat-form-field>\n                    <mat-label>Birthday</mat-label>\n                    <input matInput [(ngModel)]=\"userData.Birthday\" type=\"date\" placeholder=\"Birthday\"\n                        name=\"Birthday\" />\n                </mat-form-field>\n\n                <!-- Update and Delete User buttons -->\n                <div>\n                    <button mat-raised-button (click)=\"editUser()\">Update</button>\n                    <button mat-raised-button (click)=\"deleteUser()\">\n                        Permanently delete your account\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n    <!-- Add space between user info and favorite movies -->\n    <div></div>\n    <!-- Favorite movies section -->\n    <div>\n        <h2> Your favorite movies </h2>\n        <app-movie-card isProfile={{true}}></app-movie-card>\n\n    </div>\n</div>","import { Component, Injectable, OnInit, Input } from '@angular/core';\nimport { MovieAPIService } from '../fetch-api-data.service'\nimport { Router } from '@angular/router';\nimport { DirectorComponent } from '../director/director.component';\nimport { GenreComponent } from '../genre/genre.component';\nimport { SynopsisComponent } from '../synopsis/synopsis.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-movie-card',\n  templateUrl: './movie-card.component.html',\n  styleUrls: ['./movie-card.component.scss']\n})\nexport class MovieCardComponent {\n  @Injectable({providedIn: 'root'})\n  movies: any[] = [];\n  favoriteMovies: any[] = [];\n  @Input() isProfile = false\n  constructor(\n    public movieApiData: MovieAPIService,\n    public dialog: MatDialog,\n    public router: Router,\n    public snackBar: MatSnackBar\n  ) { }\n\nngOnInit(): void {\n  this.getMovies();\n  this.getFavoriteMovies();\n}\n\n// This is the function that will get all movies when the /movies page loads\ngetMovies(): void {\n  this.movieApiData.getAllMovies().subscribe((resp: any) => {\n      this.movies = resp;\n      return this.movies;\n    });\n  };\n// This is the function that will get all favotie movies when the /movies page loads\ngetFavoriteMovies(): void {\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  this.movieApiData.getUser(user.Username).subscribe((resp: any) => {\n      this.favoriteMovies = resp.FavoriteMovies;\n    });\n  };\n\n// This is the function that will open the dialog when the director button is clicked  \nopenDirectorDialog(directorName, directorBio, directorBirth, directorDeath): void {\n  this.dialog.open(DirectorComponent, {\n    data: {directorName: directorName, directorBio: directorBio, directorBirth, directorDeath},\n    width: '280px'\n  });\n};\n\n// This is the function that will open the dialog when the genre button is clicked  \nopenGenreDialog(genreName, genreDescription): void {\n  this.dialog.open(GenreComponent, {\n    data: {genreName: genreName, genreDescription: genreDescription},\n    width: '280px'\n  });\n};\n\n// This is the function that will open the dialog when the synopsis button is clicked  \nopenSynopsisDialog(synopsis): void {\n  this.dialog.open(SynopsisComponent, {\n    data: {synopsis: synopsis},\n    width: '280px'\n  });\n};\n\n// This is the function that toggles the movie in the user's favorites  \ntoggleFav(movie: any): void {\n    if (this.isFav(movie._id)){\n      this.deleteFavMovies(movie)\n    }\n    else {\n      this.addFavMovies(movie)\n    }\n};\n\n// This is the function that will add the movie to the user's favorites when the heart button is clicked  \naddFavMovies(movie: any): void {\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  if (user) {\n    this.movieApiData.addFavoriteMovies(movie, movie._id, user.Username).subscribe((result) => {\n      localStorage.setItem('user', JSON.stringify(result));\n      this.getFavoriteMovies();\n      this.snackBar.open(`${movie.Title} has been added to your favorites`, 'OK', {\n        duration: 1000,\n      });\n    });\n  }\n};\n\n// This is the function that will add the movie to the user's favorites when the heart button is clicked  \ndeleteFavMovies(movie: any): void {\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  if (user) {\n    this.movieApiData.deleteMovie(movie._id, user.Username).subscribe((result) => {\n      localStorage.setItem('user', JSON.stringify(result));\n      this.getFavoriteMovies();\n      this.snackBar.open(`${movie.Title} has been removed from your favorites`, 'OK', {\n        duration: 1000,\n      });\n    });\n  }\n};\n// This is the function that will indicate via the heart button whether or not a movie is a favorite\nisFav(movieID: any): boolean {\n  return this.favoriteMovies.includes(movieID)\n};\n}\n","<!doctype html>\n\n<div class=\"movie-card-page\" style=\"display: flex;\">\n    <div *ngFor=\"let movie of movies; let i=index;\">\n        <mat-card *ngIf=\"isFav(movie._id)|| !isProfile\" class=\"movie-card-margin\"><mat-card-header>\n                <mat-card-title>{{movie.Title}}</mat-card-title>\n                <mat-card-subtitle>Directed by: {{movie.Director.Name}}</mat-card-subtitle>\n            </mat-card-header>\n            <img class=\"movie-card-image\" src={{movie.ImagePath}} alt={{movie.Title}} />\n            <mat-card-actions>\n                <button mat-button (click)=\"openGenreDialog(movie.Genre.Name, movie.Genre.Description)\" color=\"primary\">\n                    Genre\n                </button>\n                <button mat-button\n                    (click)=\"openDirectorDialog(movie.Director.Name, movie.Director.Bio, movie.Director.Birth, movie.Director.Death)\"\n                    color=\"primary\">\n                    Director\n                </button>\n                <button mat-button (click)=\"openSynopsisDialog(movie.Description)\" color=\"primary\">\n                    Synopsis\n                </button>\n                <mat-icon style=\"cursor: pointer;\"\n                    (click)=\"toggleFav(movie)\">{{isFav(movie._id)?\"favorite\":\"favorite_border\"}}</mat-icon>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-genre',\n  templateUrl: './genre.component.html',\n  styleUrls: ['./genre.component.scss']\n})\nexport class GenreComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {genreName: string, genreDescription: string},\n    public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!doctype html>\n<div>\n    <h1>\n        {{data.genreName}}, {{data.genreDescription}}\n    </h1>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n// You'll use this import to close the dialog on success\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n// This import brings in the API calls we created in 6.2\r\nimport { MovieAPIService } from '../fetch-api-data.service';\r\n\r\n// This import is used to display notifications back to the user\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-user-registration-form',\r\n  templateUrl: './user-registration-form.component.html',\r\n  styleUrls: ['./user-registration-form.component.scss']\r\n})\r\nexport class UserRegistrationFormComponent implements OnInit {\r\n\r\n  @Input() userData = { Username: '', Password: '', Email: '', Birthday: '' };\r\n\r\nconstructor(\r\n    public movieApiData: MovieAPIService,\r\n    public dialogRef: MatDialogRef<UserRegistrationFormComponent>,\r\n    public snackBar: MatSnackBar) { }\r\n\r\nngOnInit(): void {\r\n}\r\n\r\n// This is the function responsible for sending the form inputs to the backend\r\nregisterUser(): void {\r\n    this.movieApiData.userRegistration(this.userData).subscribe((result) => {\r\n  // Logic for a successful user registration goes here\r\n     this.dialogRef.close(); // This will close the modal on success\r\n     this.snackBar.open('Sign up successful!', 'OK', {\r\n        duration: 2000\r\n     });\r\n    }, (result) => {\r\n      console.log(result);\r\n      this.snackBar.open('Something went wrong with the sign up', 'OK', {\r\n        duration: 2000\r\n      });\r\n    });\r\n  }\r\n\r\n  }\r\n\r\n","<!doctype html>\r\n\r\n<mat-card>\r\n    <mat-card-header>\r\n        <mat-card-title>Sign Up!</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <form>\r\n            <mat-form-field>\r\n                <input matInput [(ngModel)]=\"userData.Username\" placeholder=\"Username\" type=\"text\" name=\"Username\"\r\n                    required>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <input matInput [(ngModel)]=\"userData.Password\" type=\"password\" placeholder=\"Password\" name=\"Password\"\r\n                    required>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <input matInput [(ngModel)]=\"userData.Email\" type=\"email\" placeholder=\"Email\" name=\"Email\" required>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <input matInput [(ngModel)]=\"userData.Birthday\" type=\"date\" placeholder=\"Birthday\" name=\"Birthday\">\r\n            </mat-form-field>\r\n        </form>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n        <button mat-raised-button (click)=\"registerUser()\">\r\n            Sign Up\r\n        </button>\r\n    </mat-card-actions>\r\n</mat-card>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-director',\n  templateUrl: './director.component.html',\n  styleUrls: ['./director.component.scss']\n})\nexport class DirectorComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {directorName: string, directorBio: string, directorBirth: any, directorDeath: any},\n    public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<!doctype html>\n<div>\n    <h1>\n        Director {{data.directorName}}, {{data.directorBio}}, {{data.directorBirth}}, {{data.directorDeath}}\n    </h1>\n</div>","import { Component } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n\r\n/**\r\n * Represents the root component of the Angular application.\r\n */\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  /**\r\n   * Title of the application.\r\n   */\r\n  title = 'myFlix-Angular-client';\r\n}","<!doctype html>\r\n<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { UserRegistrationFormComponent } from './user-registration-form/user-registration-form.component';\r\nimport { UserLoginFormComponent } from './user-login-form/user-login-form.component';\r\nimport { MovieCardComponent } from './movie-card/movie-card.component';\r\nimport { WelcomePageComponent } from './welcome-page/welcome-page.component';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { DirectorComponent } from './director/director.component';\r\nimport { GenreComponent } from './genre/genre.component';\r\nimport { SynopsisComponent } from './synopsis/synopsis.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'welcome', component: WelcomePageComponent },\r\n  { path: 'movies', component: MovieCardComponent },\r\n  {path: 'profile', component: UserProfileComponent},\r\n  { path: '', redirectTo: 'welcome', pathMatch: 'prefix' },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserRegistrationFormComponent,\r\n    UserLoginFormComponent,\r\n    MovieCardComponent,\r\n    WelcomePageComponent,\r\n    UserProfileComponent,\r\n    DirectorComponent,\r\n    GenreComponent,\r\n    SynopsisComponent,\r\n    NavbarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  providers: [MovieCardComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserRegistrationFormComponent } from '../user-registration-form/user-registration-form.component';\r\nimport { UserLoginFormComponent } from '../user-login-form/user-login-form.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-welcome-page',\r\n  templateUrl: './welcome-page.component.html',\r\n  styleUrls: ['./welcome-page.component.scss']\r\n})\r\nexport class WelcomePageComponent implements OnInit {\r\n  constructor(public dialog: MatDialog) { }\r\n  ngOnInit(): void {\r\n  }\r\n   // This is the function that will open the dialog when the signup button is clicked  \r\nopenUserRegistrationDialog(): void {\r\n  this.dialog.open(UserRegistrationFormComponent, {\r\n// Assigning the dialog a width\r\n  width: '280px'\r\n  });\r\n};\r\n\r\n// This is the function that will open the dialog when the login button is clicked  \r\nopenUserLoginDialog(): void {\r\nthis.dialog.open(UserLoginFormComponent, {\r\nwidth: '280px'\r\n});\r\n};\r\n\r\n}","<!doctype html>\n<div class=\"welcome-page\">\n    <h1>\n        Welcome to myFlix!\n    </h1>\n    <!-- Adding the click event on the signup button -->\n    <button mat-raised-button (click)=\"openUserRegistrationDialog()\" style=\"margin-right: 10px;\" color=\"primary\">\n        Sign Up\n    </button>\n    <button mat-raised-button (click)=\"openUserLoginDialog()\" style=\"margin-right: 10px;\" color=\"primary\">\n        Login\n    </button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onLoggedOut (): void {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n  }\n  isLoggedIn (): boolean {\n    if (!localStorage.getItem(\"token\")){\n      return false\n    }\n    else {\n      return true\n    }\n      \n\n}}\n","<!doctype html>\n<mat-toolbar color=\"primary\">\n    <span class=\"cursor\" routerLink=\"/movies\">myFlix</span>\n    <div class=\"spacer\"></div>\n    <a mat-button routerLink=\"/movies\">Home</a>\n    <a mat-button routerLink=\"/profile\">Profile</a>\n    <a mat-button (click)=\"onLoggedOut()\" routerLink=\"/welcome\">{{isLoggedIn()?\"Logout\":\"Login\"}}</a>\n</mat-toolbar>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-synopsis',\n  templateUrl: './synopsis.component.html',\n  styleUrls: ['./synopsis.component.scss']\n})\nexport class SynopsisComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {synopsis: string},\n    public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!doctype html>\n<div>\n    <h1>\n        {{data.synopsis}}\n    </h1>\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n// You'll use this import to close the dialog on success\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n// This import brings in the API calls we created in 6.2\r\nimport { MovieAPIService } from '../fetch-api-data.service';\r\n\r\n// This import is used to display notifications back to the user\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n// This import is used to route\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-login-form',\r\n  templateUrl: './user-login-form.component.html',\r\n  styleUrls: ['./user-login-form.component.scss']\r\n})\r\nexport class UserLoginFormComponent implements OnInit {\r\n\r\n  @Input() userData = { username: '', password: ''};\r\n\r\nconstructor(\r\n    public movieApiData: MovieAPIService,\r\n    public dialogRef: MatDialogRef<UserLoginFormComponent>,\r\n    public snackBar: MatSnackBar,\r\n    public router: Router\r\n) { }\r\n\r\nngOnInit(): void {\r\n}\r\n\r\n// This is the function responsible for sending the form inputs to the backend\r\nloginUser(): void {\r\n    this.movieApiData.userLogin(this.userData).subscribe((result) => {\r\n  // Logic for a successful user login goes here!\r\n     this.dialogRef.close(); // This will close the modal on success!\r\n     this.snackBar.open(`Login successful! Welcome ${result.user.Username}`, 'OK', {\r\n        duration: 2000\r\n     });\r\n    \r\n      if (result) {\r\n        localStorage.setItem(\"user\", JSON.stringify(result.user));\r\n        localStorage.setItem(\"token\", result.token);\r\n        this.router.navigate(['/movies']);\r\n      };\r\n  \r\n    }, \r\n    // If login fails \r\n    (result) => {\r\n      console.log(result);\r\n      this.snackBar.open('Login failed', 'OK', {\r\n        duration: 2000\r\n      });\r\n      \r\n    });\r\n   \r\n  }\r\n\r\n  }\r\n","<!doctype html>\r\n\r\n<mat-card>\r\n    <mat-card-header>\r\n        <mat-card-title>Log in</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <form>\r\n            <mat-form-field>\r\n                <input matInput [(ngModel)]=\"userData.username\" placeholder=\"Username\" type=\"text\" name=\"username\"\r\n                    required>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <input matInput [(ngModel)]=\"userData.password\" type=\"password\" placeholder=\"Password\" name=\"password\"\r\n                    required>\r\n            </mat-form-field>\r\n        </form>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n        <button mat-raised-button (click)=\"loginUser()\">\r\n            Log in\r\n        </button>\r\n    </mat-card-actions>\r\n</mat-card>","import { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/internal/operators';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n//Declaring the api url that will provide data for the client app\r\nconst apiUrl = 'https://movies-myflix-cmr927-6d25967ba551.herokuapp.com/';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MovieAPIService {\r\n  // Inject the HttpClient module to the constructor params\r\n // This will provide HttpClient to the entire class, making it available via this.http\r\n  constructor(private http: HttpClient) {\r\n  }\r\n // Making the api call for the user registration endpoint\r\n  public userRegistration(userDetails: any): Observable<any> {\r\n    return this.http.post(apiUrl + 'users/', userDetails).pipe(\r\n    catchError(this.handleError)\r\n    );\r\n  };\r\n\r\n   // Making the api call for the user login endpoint\r\n   public userLogin(loginDetails: any): Observable<any> {\r\n    return this.http.post(apiUrl + 'login/', loginDetails).pipe(\r\n    catchError(this.handleError)\r\n    )\r\n\r\n  };\r\n\r\n  // Making the api call for the get all movies endpoint\r\n  getAllMovies(): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    return this.http.get(apiUrl + 'movies', {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })}).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  };\r\n\r\n  // Making the api call for the get one movie endpoint\r\n  getOneMovie(movieTitle: any): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    return this.http.get(apiUrl + 'movies/' + movieTitle, {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })}).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  };\r\n\r\n  // Making the api call for the get director endpoint\r\n  getDirector(directorName: any): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    return this.http.get(apiUrl + 'movies/directors/' + directorName, {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })}).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  };\r\n\r\n  // Making the api call for the get genre endpoint\r\n  getGenre(genreName: any): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    return this.http.get(apiUrl + 'movies/genres/' + genreName, {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })}).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  };\r\n\r\n  // Making the api call for the get user endpoint\r\n  getUser(userName: any): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    return this.http.get(apiUrl + 'users/' + userName, {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })}).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  };\r\n\r\n  // Making the api call for the add a movie to favorite movies endpoint\r\n  addFavoriteMovies(movie: any, movieID: any, userName: any): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    return this.http.post(apiUrl + 'users/' + userName + '/movies/' + movieID, movie, {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })}).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  };\r\n\r\n  // Making the api call for the edit user endpoint\r\n  editUser(userName: any, Password: any, Email: any,\r\n    Birthday: any\r\n  ): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    return this.http.put(apiUrl + 'users/' + userName, {Username: userName, Password, Email, Birthday}, {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })}).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  };\r\n\r\n  // Making the api call for the delete user endpoint\r\n  deleteUser(userName: any): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    return this.http.delete(apiUrl + 'users/' + userName, {responseType: \"text\", headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })}).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  };\r\n\r\n  // Making the api call for the delete a movie from the favorite movies endpoint\r\n  deleteMovie(movieID: any, userName: any): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    return this.http.delete(apiUrl + 'users/' + userName + '/movies/' + movieID, {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })}).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  };\r\n\r\n// Non-typed response extraction\r\n  private extractResponseData(res: Response): any {\r\n    const body = res;\r\n    return body || { };\r\n  }\r\n\r\nprivate handleError(error: HttpErrorResponse): any {\r\n    if (error.error instanceof ErrorEvent) {\r\n    console.error('Some error occurred:', error.error.message);\r\n    } else {\r\n    console.error(\r\n        `Error Status code ${error.status}, ` +\r\n        `Error body is: ${JSON.stringify(error)}`);\r\n    }\r\n    return throwError(\r\n    'Something bad happened; please try again later.');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}